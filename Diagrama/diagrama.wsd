@startuml diagrama
skinparam ClassAttributeIconSize 0

class Item{
  -numProtudo : int
  -nomeProduto : string
  -precoUnitario : float
  -quantidade : int
  -precoTotal : float
  -desconto : float

  +Item(numProtudo : int, nomeProduto : string, precoUnitario : float, quantidade : int, precoTotal : float, desconto : float)
  +getNumProtudo() : int
  +getNomeProduto() : string
  +getPrecoUnitario() : float
  +getQuantidade() : int
  +getPrecoTotal() : float
  +getDesconto() : float
  +setNumProtudo(numProtudo : int) : void
  +setNomeProduto(nomeProduto : string) : void
  +setPrecoUnitario(precoUnitario : float) : void
  +setQuantidade(quantidade : int) : void
  +setPrecoTotal(precoTotal : float) : void
  +setDesconto(desconto : float) : void

  +calcularPrecoTotal() : void
  +calcularDesconto() : void
  +calcularPrecoTotalComDesconto() : void
  +toString() : string
} 
Item "n" --> "1" ListaDeCompras

class Cliente extends Usuario implements comparable{
  -cpf : string
  -listaDeCompras : List<Item>

  +Cliente(cpf : string, cartaoCredito : string, limiteDisponivelCartao : float, listaDeCompras : List<Item>)
  +getCpf() : string
  +getListaDeCompras() : List<Item>
  +setCpf(cpf : string) : void
  +setListaDeCompras(listaDeCompras : List<Item>) : void

  +toString() : string
}


abstract class Usuario{
  #nome : string
  #nomeUser : string
  #senha : string
  -statusLogin : boolean

  +getNome : string
  +getNomeUser : string
  +getSenha : string
  +getStatusLogin : boolean

  +setNome : void
  +setNomeUser : void
  +setSenha : void
  +setStatusLogin : void
}

class ListaDeCompras{
  -listaDeCompras : List<Item>
  -precoTotalLista : float
  -{static}numListaDeCompras : int

  +ListaDeCompras()
  +getPrecoTotalLista() : float
  +adicionarItem(nomeProduto : string, quantidade : int) : void
  +removerItem(nomeProduto : string) : void
  +atualizarQuantidade(nomeProduto : string, quantidade : int) : void
  +toString() : string

}
ListaDeCompras "1 " --> "1    " Cliente

class MsgException extends RuntimeException{
  MsgException(message : string)
}

class ServicesAlerts{
  +{static}alert(alertType : AlertType, title : string, hearderText : string, contentText : string) : void
}

class ServicesCliente{
  +{static}validaUser(str : string) : boolean
  +{static}validaCPF(str : string) : boolean
  +{static}validaNome(str : string) : boolean
  +{static}validaSenha(str : string) : boolean

  +{static}registrar(nome : string, cpf : string, cartaoCredito : string, nomeUser : string, senha : string) : void
  +{static}login(nomeUser : string, senha : string) : void
  +{static}logout(cliente : Cliente) : void
  +{static}registerClienteInList(cliente : Cliente) : void
  +{static}writeListClentes(cliente : List<Cliente>) : void
  +{static}readListClentes() : List<Cliente>
  +{static}efetuarPedido(cliente : Cliente) : string
  +{static}registerCompraInList(cliente : Cliente) : void
}

class ServicesListeDeCompras{
  +{static}writeListItensDeposito(itensDeposito : List<Item>) : void
  +{static}readListItensDeposito() : List<Item>
}

@enduml